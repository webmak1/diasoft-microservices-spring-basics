<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ru.diasoft.micro</groupId>
        <artifactId>demo-parent</artifactId>
        <version>1.01.01-SNAPSHOT</version>
    </parent>

    <artifactId>demo</artifactId>
    <name>demo - microservice</name>
    <packaging>${packaging.type}</packaging>
    
    <properties>
        <dqcodegen.rest.api>false</dqcodegen.rest.api>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Dfile.encoding=UTF8</jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                </configuration>
            </plugin>
            <plugin>
                <!-- DQCodeGen https://conf.diasoft.ru/pages/viewpage.action?pageId=44771672 -->
                <groupId>ru.diasoft.digitalq.codegen</groupId>
                <artifactId>dqcodegen-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Generate REST Controller by Q.Archer</id>
                        <!-- DQCodeGen+Q.Archer https://conf.diasoft.ru/pages/viewpage.action?pageId=121474970 -->
                        <goals>
                            <goal>qarcher</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                            <qarcherService>http://dsagregator2:8030</qarcherService>
                            <targetPackage>ru.diasoft.micro</targetPackage>
                            <qarcherModuleName>DQ Mobile Investment Client Portfolio</qarcherModuleName>
                            <!--    -->
                            <qarcherVersion>1.01.01</qarcherVersion>
                            <!--    -->
                            <restApi>${dqcodegen.rest.api}</restApi>
                            <restModuleSplit>true</restModuleSplit>
                            <useZonedDateTime>true</useZonedDateTime>
                            <useReactiveApi>false</useReactiveApi>
                            <useJsonNodeType>true</useJsonNodeType>
                            <useResponseDTO>true</useResponseDTO>
                            <generateCrud>true</generateCrud>
                            <crudAudit>true</crudAudit>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Generate Events</id>
                        <!-- DQCodeGen+Event-Driven Architectures (EDA). conf.diasoft.ru/pages/viewpage.action?pageId=50894482 -->
                        <goals>
                            <goal>qarcher</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                            <qarcherService>http://dsagregator2:8050</qarcherService>
                            <targetPackage>ru.diasoft.micro</targetPackage>
                            <qarcherModuleName>DQ Mobile Investment Client Portfolio</qarcherModuleName>
                            <!--    -->
                            <qarcherVersion>1.01.01</qarcherVersion>
                            <!--    -->
                            <asyncApi>true</asyncApi>
                            <useZonedDateTime>true</useZonedDateTime>
                            <useMessage>true</useMessage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Generate profiles yaml</id>
                        <!-- DQCodeGen+Q.Archer https://conf.diasoft.ru/pages/viewpage.action?pageId=121474970 -->
                        <goals>
                            <goal>build-profiles</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-generated</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/target/generated-sources/querydsl</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-generated-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/generated-resources/dqcodegen</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-sources/querydsl</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor,lombok.launch.AnnotationProcessorHider$AnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/Q*.class</exclude>
                                <exclude>**/*Mock.class</exclude>
                                <exclude>**/config/*.class</exclude>
                                <exclude>**/mapper/*Impl.class</exclude>
                                <exclude>**/DemoApplication.class</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <artifactId>demo-db</artifactId>
                                    <groupId>ru.diasoft.micro</groupId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                                    <includes>**/*</includes>
                                    <excludes>**/mdpid/*.xml</excludes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <DependencyConvergence />
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <dependenciesToScan>
                        <dependency>ru.diasoft.micro:archetype-tests</dependency>
                    </dependenciesToScan>
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ru.diasoft.micro</groupId>
                <artifactId>ms-archetype-bom</artifactId>
                <version>${archetype-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- spring-boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>ru.diasoft.micro</groupId>
            <artifactId>core-starter</artifactId>
        </dependency>
        <!-- JPA -->
        <dependency>
            <groupId>ru.diasoft.micro</groupId>
            <artifactId>jpa-starter</artifactId>
        </dependency>
        <!-- Streams Kafka -->
        <dependency>
            <groupId>ru.diasoft.micro</groupId>
            <artifactId>stream-kafka-starter</artifactId>
        </dependency>
        <!-- Feign client -->
        <dependency>
            <groupId>ru.diasoft.micro</groupId>
            <artifactId>feign-starter</artifactId>
        </dependency>
        <!-- Service Discovery -->
        <dependency>
            <groupId>ru.diasoft.micro.mdp.lib</groupId>
            <artifactId>mdpribbon</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>stax</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- diasoft platform -->
        <dependency>
            <groupId>ru.diasoft.digitalq.libs</groupId>
            <artifactId>dqapiexception</artifactId>
        </dependency>
        <dependency>
            <groupId>ru.diasoft.micro.mdp.lib</groupId>
            <artifactId>qpermissioncontrol</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.balana</groupId>
            <artifactId>org.wso2.balana</artifactId>
        </dependency>
        <dependency>
            <groupId>ru.diasoft.micro.mdp.lib</groupId>
            <artifactId>mdpauditlib</artifactId>
        </dependency>
        <dependency>
            <groupId>ru.diasoft.micro.mdp.lib</groupId>
            <artifactId>mdpversionslib</artifactId>
        </dependency>
        <!-- Dev tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Micrometer starter-->
        <dependency>
            <groupId>ru.diasoft.micro</groupId>
            <artifactId>micrometer-starter</artifactId>
        </dependency>
        <!-- Mapstruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>	        
        </dependency>
        <!-- Tests -->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit</artifactId>                
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ru.diasoft.micro</groupId>
            <artifactId>archetype-tests</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <profiles>
        <profile>
            <id>jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Multi-Release>true</Multi-Release>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jar11</id>
            <activation>
                <property>
                    <name>jdk11</name>
                </property>
            </activation>
            <properties>
                <packaging.type>jar</packaging.type>
                <maven.compiler.source>11</maven.compiler.source>
                <maven.compiler.target>11</maven.compiler.target>
                <java.version>11</java.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Multi-Release>true</Multi-Release>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-image</id>
            <build>
                <finalName>${project.artifactId}</finalName>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>1.4.10</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>package</phase>
                                <goals>
                                <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>${docker.image.prefix}/${project.artifactId}</repository>
                            <!-- Образ создается под интеграционные тесты. Образ для прода
                            будет создан при помощи docker/Dockerfile-service.txt -->
                            <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                        <groupId>org.jacoco</groupId>
                                            <artifactId>org.jacoco.agent</artifactId>
                                            <classifier>runtime</classifier>
                                            <version>0.8.6</version>
                                            <type>jar</type>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                            <destFileName>jacoco-agent.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
     </profile>
        <profile>
            <id>war</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <webResources>
                                <resource>
                                    <directory>src/main/webapp/WEB-INF</directory>
                                    <targetPath>WEB-INF/</targetPath>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>ibm-web-ext.xml</include>
                                        <include>jboss-web.xml</include>
                                        <include>jboss-deployment-structure.xml</include>
                                        <include>weblogic.xml</include>
                                    </includes>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>rest</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>jdk11</name>
                </property>
            </activation>
            <properties>
                <dqcodegen.rest.api>true</dqcodegen.rest.api>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-generated</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${basedir}/target/generated-sources/dqcodegen</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>ru.diasoft.micro</groupId>
                    <artifactId>rest-starter</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-actuator</artifactId>
                </dependency>
                <!-- Security -->
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-oauth2</artifactId>
                </dependency>
                <!-- Swagger -->
                <dependency>
                    <groupId>ru.diasoft.micro</groupId>
                    <artifactId>swagger-starter</artifactId>
                </dependency>
                <!-- Chaos monkey -->
                <dependency>
                    <groupId>de.codecentric</groupId>
                    <artifactId>chaos-monkey-spring-boot</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
