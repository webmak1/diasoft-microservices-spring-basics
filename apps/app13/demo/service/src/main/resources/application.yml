server:
  port: ${SERVICE_PORT:7081}

mdp.discovery:
  discoveryClientName: ${DISCOVERY_CLIENT_NAME:disable}

security:
  enabled: false
  oauth2:
    client:
      clientId:
      clientSecret:
      scope:
      accessTokenUri:
      userAuthorizationUri:
    resource:
      jwt:
        key-uri:

spring:
  application:
    name: ${SERVICE_NAME:demo}
  # Postgres
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/postgresdb?currentSchema=public
    username: user1
    password: pA55w0rd123
    hikari:
      connection-test-query:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        globally_quoted_identifiers: false
        jdbc:
          time_zone: UTC
          lob:
            non_contextual_creation: true

  kafka:
    bootstrap-servers: 192.168.1.9:9092
    admin:
      properties:
        request.timeout.ms: ${KAFKA_REQUEST_TIMEOUT:1000}

  cloud:
    stream:
      binders:
        binderName:
          type: kafka
      bindings:
        smsVerificationCreatedPublish:
          destination: sms-verification-created
        smsVerificationDeliveredSubscribe:
          destination: sms-verification-delivered
          group: demo


dstrace:
  enabled: ${TRACER_ENABLE:false}

logging:
  level:
    ru.diasoft: ${LOGGING_LEVEL:DEBUG}

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
#  instance:
#    prefer-ip-address: true
    fetch-registry: true
    register-with-uereka: true