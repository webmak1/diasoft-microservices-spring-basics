<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="mdpid.01" author="svdovin" runInTransaction="false">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="AUTO_PK_SUPPORT"/>
            </not>
        </preConditions>
        <createTable tableName="AUTO_PK_SUPPORT">
            <column name="TABLE_NAME" type="VARCHAR(30)" remarks="Имя таблицы">
              <constraints nullable="false" primaryKey="true" primaryKeyName="PK_AUTO_PK_SUPPORT"/>
            </column>
            <column name="NEXT_ID" type="NUMERIC(19, 0)" remarks="Значение ключа">
              <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="mdpid.02" author="svdovin" runInTransaction="false" dbms="oracle">
        <sql splitStatements="false">
CREATE OR REPLACE PROCEDURE AUTO_PK_GEN
(TABLENAME IN CHAR, BATCHSIZE IN INTEGER, NEXT_ID OUT NUMERIC) IS
BEGIN
  UPDATE AUTO_PK_SUPPORT SET NEXT_ID = NEXT_ID + AUTO_PK_GEN.BATCHSIZE WHERE TABLE_NAME = UPPER(AUTO_PK_GEN.TABLENAME);
  IF (SQL%ROWCOUNT = 0) THEN
        INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID)
        VALUES (UPPER(AUTO_PK_GEN.TABLENAME), 1000 + AUTO_PK_GEN.BATCHSIZE);
  END IF;

  SELECT NEXT_ID INTO AUTO_PK_GEN.NEXT_ID FROM AUTO_PK_SUPPORT WHERE TABLE_NAME = UPPER(TABLENAME);
  COMMIT;
END;
        </sql>
    </changeSet>

    <changeSet id="mdpid.03" author="svdovin" runInTransaction="false" dbms="mssql">
        <sql splitStatements="false">
IF OBJECT_ID ( 'AUTO_PK_GEN', 'P' ) IS NOT NULL
  DROP PROCEDURE AUTO_PK_GEN;
        </sql>
	<createProcedure>
CREATE PROCEDURE AUTO_PK_GEN
  @TABLENAME NCHAR(30),
  @BATCHSIZE INTEGER,
  @NEXT_ID NUMERIC OUT
AS
  BEGIN
    UPDATE AUTO_PK_SUPPORT SET NEXT_ID = NEXT_ID + @BATCHSIZE
     WHERE TABLE_NAME = UPPER(@TABLENAME)

    IF @@ROWCOUNT = 0
      INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID)
      VALUES (UPPER(@TABLENAME), 1000 + @BATCHSIZE)

    SET @NEXT_ID = (SELECT NEXT_ID FROM AUTO_PK_SUPPORT WHERE TABLE_NAME = UPPER(@TABLENAME))
    COMMIT
  END;
	</createProcedure>
    </changeSet>

    <changeSet id="mdpid.04" author="svdovin" runInTransaction="false" dbms="postgresql">
        <sql splitStatements="false">
CREATE OR REPLACE FUNCTION AUTO_PK_GEN
(TABLENAME CHAR, BATCHSIZE INTEGER, OUT NEXT_ID BIGINT) 
LANGUAGE plpgsql 
AS
$BODY$
BEGIN
  UPDATE AUTO_PK_SUPPORT AS A SET NEXT_ID = A.NEXT_ID + BATCHSIZE WHERE TABLE_NAME = UPPER(TABLENAME);
  IF NOT FOUND THEN
        INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID)
        VALUES (UPPER(TABLENAME), 1000 + BATCHSIZE);
  END IF;

  SELECT A.NEXT_ID INTO NEXT_ID FROM AUTO_PK_SUPPORT AS A WHERE TABLE_NAME = UPPER(TABLENAME);
  RETURN;
END;
$BODY$
        </sql>
    </changeSet>

</databaseChangeLog>
